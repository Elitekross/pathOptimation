/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package websiteapplet;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.io.*;
/**
 *
 * @author Meyer
 */
public class WebJPanel extends JPanel {
    public WebJPanel() {
        initComponents();
    }

    /**
     * Creates new form websiteJPanel
     */
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        this.setPreferredSize(new Dimension(150, 350));
        this.setMinimumSize(new Dimension(150, 350));
        this.setMaximumSize(new Dimension(150, 350));
        
        nameField = new JTextField();
        monthField = new JTextField();
        dayField = new JTextField();
        sendButton = new JButton();
        jPanel1 = new DisplayPanel();
        jLabel1 = new JLabel();


        nameField.setText("First Name");
        nameField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        monthField.setText("MM");
        monthField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                monthActionPerformed(evt);
            }
        });

        dayField.setText("DD");
        dayField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                dayActionPerformed(evt);
            }
        });

        sendButton.setText("Send");
        sendButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
         }
        );

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        jPanel1.setFont(jPanel1.displayFont);
        jPanel1.setPreferredSize(new Dimension(120, 40));
        jPanel1.setMinimumSize(new Dimension(120, 40));
        jPanel1.setMaximumSize(new Dimension(120, 40));

        jLabel1.setText("Input will be stored");

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameField, GroupLayout.PREFERRED_SIZE, 178, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(monthField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dayField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sendButton))
                            .addComponent(jLabel1))
                        .addGap(0, 16, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendButton))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(17, 17, 17))
        );
    }// </editor-fold>                        

    private void nameActionPerformed(ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void monthActionPerformed(ActionEvent evt) {                                            
        // TODO add your handling code here:
    }  
    
    private void dayActionPerformed(ActionEvent evt) {
    }       

    private void sendButtonActionPerformed(ActionEvent evt) {                                         
        if(sendButton.getText().equals("Send")) {
                    name = nameField.getText();
                    month = Integer.parseInt(monthField.getText());
                    day = Integer.parseInt(dayField.getText());
                    sendButton.setText("Again?");
                    jPanel1.panelText = getCodeName();
                    repaint();
                    File input = new File("input.txt");
                    input.canWrite();
                    PrintWriter out;
                    try {
                       out = new PrintWriter(new FileWriter(input, true));
                    }
                    catch (Exception e) {
                         throw new IllegalArgumentException("Can't open file \" input.txt \" for output.\n"
                                 + "(Error :" + e + ")");
                    }
                    out.println(name + " " + month + "\\" + day);
                    out.close();
                        
                } else {
                    nameField.setText("First Name");
                    monthField.setText("MM");
                    dayField.setText("DD");
                    sendButton.setText("Send");
                    jPanel1.panelText = "Please write your name and birthday.";
                    repaint();
    }}                                        
    private String getCodeName() {
        int nameCount = 0;
        int birthdayCount = (day * month) % 12;
        String codeName = "";
        birthdayCount++;
        for(int i = 0; i < name.length(); i++) {
            nameCount += ((int)name.toUpperCase().charAt(i) - 64);
        }
        nameCount = nameCount % 12;
        nameCount++;
        switch (nameCount) {
            case 1: codeName += "Mister ";
                break;
            case 2: codeName += "Devious ";
                break;
            case 3: codeName += "Splendid ";
                break;
            case 4: codeName += "Alaskan ";
                break;
            case 5: codeName += "Questionable ";
                break;
            case 6: codeName += "Hyperactive ";
                break;
            case 7: codeName += "Curious ";
                break;
            case 8: codeName += "Resting ";
                break;
            case 9: codeName += "Watching ";
                break;
            case 10: codeName += "Disapearing ";
                break;
            case 11: codeName += "Bespeckled ";
                break;
            case 12: codeName += "Wandering ";
                break;  
        }
        switch (birthdayCount) {
            case 1: codeName += "Eagle";
                break;
            case 2: codeName += "Honey Badger";
                break;
            case 3: codeName += "Anteater";
                break;
            case 4: codeName += "Wolf";
                break;
            case 5: codeName += "Antelope";
                break;
            case 6: codeName += "Possum";
                break;
            case 7: codeName += "Scorpion";
                break;
            case 8: codeName += "Owl";
                break;
            case 9: codeName += "Alligator";
                break;
            case 10: codeName += "Bear";
                break;
            case 11: codeName += "Shark";
                break;
            case 12: codeName += "Jack Rabbit";
                break;  
        }
        return codeName;
    } 

    // Variables declaration - do not modify                     
    private JButton jButton1;
    private JButton sendButton;
    private JLabel jLabel1;
    private DisplayPanel jPanel1;
    private JTextField nameField;
    private JTextField monthField;
    private JTextField dayField;
    private JTextField jTextField4;
    private String name = new String();
    private int month;
    private int day;
    // End of variables declaration                   
}

    

